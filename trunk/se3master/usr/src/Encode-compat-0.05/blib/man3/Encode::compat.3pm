.\" Automatically generated by Pod::Man v1.3, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Encode::compat 3"
.TH Encode::compat 3 "2002-12-02" "perl v5.6.1" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Encode::compat \- Encode.pm emulation layer
.SH "VERSION"
.IX Header "VERSION"
This document describes version 0.04 of Encode::compat.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Encode::compat; # a no-op for Perl v5.7.1+
\&    use Encode qw(...); # all constants and imports works transparently
.Ve
.Vb 1
\&    # use Encode functions as normal
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1WARNING:\s0 \s-1THIS\s0 \s-1IS\s0 A \s-1PROOF\-OF\-CONCEPT\s0.  Most functions are incomplete.
All implementation details are subject to change!
.PP
This module provide a compatibility layer for \fBEncode.pm\fR users on perl
versions earlier than v5.7.1.  It translates whatever call it receives
into \fBText::Iconv\fR, or (in the future) \fBUnicode::MapUTF8\fR to perform
the actual work.
.PP
The \f(CW\*(C`is_utf8()\*(C'\fR, \f(CW\*(C`_utf8_on()\*(C'\fR and \f(CW\*(C`_utf8_off()\*(C'\fR calls are performed
by the method native to the perl version \*(-- 5.6.1 would use
\&\f(CW\*(C`pack\*(C'\fR/\f(CW\*(C`unpack\*(C'\fR, 5.6.0 uses \f(CW\*(C`tr//CU\*(C'\fR, etc.
.PP
Theoretically, it could be backported to 5.005 and earlier, with none of
the unicode-related semantics available, and serves only as a
abstraction layer above \f(CW\*(C`Text::Iconv\*(C'\fR, \f(CW\*(C`Unicode::MapUTF8\*(C'\fR and possibly
other transcoding modules.
.SH "CAVEATS"
.IX Header "CAVEATS"
Currently, this module only support 5.6.1, and merely provides the three
utility function above (\f(CW\*(C`encode()\*(C'\fR, \f(CW\*(C`decode()\*(C'\fR and \f(CW\*(C`from_to()\*(C'\fR), with
a very kludgy \f(CW\*(C`FB_HTMLCREF\*(C'\fR fallback against \f(CW\*(C`latin\-1\*(C'\fR in
\&\f(CW\*(C`from_to()\*(C'\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Encode, perlunicode
.SH "AUTHORS"
.IX Header "AUTHORS"
Autrijus Tang <autrijus@autrijus.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2002 by Autrijus Tang <autrijus@autrijus.org>.
.PP
This program is free software; you can redistribute it and/or 
modify it under the same terms as Perl itself.
.PP
See <http://www.perl.com/perl/misc/Artistic.html>
